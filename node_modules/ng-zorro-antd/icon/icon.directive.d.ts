/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { AfterContentChecked, ElementRef, OnChanges, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import { IconDirective, ThemeType } from '@ant-design/icons-angular';
import { NzIconPatchService, NzIconService } from './icon.service';
import * as ɵngcc0 from '@angular/core';
export declare class NzIconDirective extends IconDirective implements OnInit, OnChanges, AfterContentChecked {
    iconService: NzIconService;
    renderer: Renderer2;
    cacheClassName: string | null;
    set nzSpin(value: boolean);
    nzRotate: number;
    set nzType(value: string);
    set nzTheme(value: ThemeType);
    set nzTwotoneColor(value: string);
    set nzIconfont(value: string);
    hostClass?: string;
    private readonly el;
    private iconfont?;
    private spin;
    constructor(elementRef: ElementRef, iconService: NzIconService, renderer: Renderer2, iconPatch: NzIconPatchService);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    /**
     * If custom content is provided, try to normalize SVG elements.
     */
    ngAfterContentChecked(): void;
    /**
     * Replacement of `changeIcon` for more modifications.
     */
    private changeIcon2;
    private handleSpin;
    private handleRotate;
    private setClassName;
    private setSVGData;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzIconDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NzIconDirective, "[nz-icon]", ["nzIcon"], {
    "nzRotate": "nzRotate";
    "nzSpin": "nzSpin";
    "nzType": "nzType";
    "nzTheme": "nzTheme";
    "nzTwotoneColor": "nzTwotoneColor";
    "nzIconfont": "nzIconfont";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiaWNvbi5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7QUFVQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE2QkEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWxpYmFiYS5jb20gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IEFmdGVyQ29udGVudENoZWNrZWQsIEVsZW1lbnRSZWYsIE9uQ2hhbmdlcywgT25Jbml0LCBSZW5kZXJlcjIsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEljb25EaXJlY3RpdmUsIFRoZW1lVHlwZSB9IGZyb20gJ0BhbnQtZGVzaWduL2ljb25zLWFuZ3VsYXInO1xuaW1wb3J0IHsgTnpJY29uUGF0Y2hTZXJ2aWNlLCBOekljb25TZXJ2aWNlIH0gZnJvbSAnLi9pY29uLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpJY29uRGlyZWN0aXZlIGV4dGVuZHMgSWNvbkRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBBZnRlckNvbnRlbnRDaGVja2VkIHtcbiAgICBpY29uU2VydmljZTogTnpJY29uU2VydmljZTtcbiAgICByZW5kZXJlcjogUmVuZGVyZXIyO1xuICAgIGNhY2hlQ2xhc3NOYW1lOiBzdHJpbmcgfCBudWxsO1xuICAgIHNldCBuelNwaW4odmFsdWU6IGJvb2xlYW4pO1xuICAgIG56Um90YXRlOiBudW1iZXI7XG4gICAgc2V0IG56VHlwZSh2YWx1ZTogc3RyaW5nKTtcbiAgICBzZXQgbnpUaGVtZSh2YWx1ZTogVGhlbWVUeXBlKTtcbiAgICBzZXQgbnpUd290b25lQ29sb3IodmFsdWU6IHN0cmluZyk7XG4gICAgc2V0IG56SWNvbmZvbnQodmFsdWU6IHN0cmluZyk7XG4gICAgaG9zdENsYXNzPzogc3RyaW5nO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgZWw7XG4gICAgcHJpdmF0ZSBpY29uZm9udD87XG4gICAgcHJpdmF0ZSBzcGluO1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIGljb25TZXJ2aWNlOiBOekljb25TZXJ2aWNlLCByZW5kZXJlcjogUmVuZGVyZXIyLCBpY29uUGF0Y2g6IE56SWNvblBhdGNoU2VydmljZSk7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBJZiBjdXN0b20gY29udGVudCBpcyBwcm92aWRlZCwgdHJ5IHRvIG5vcm1hbGl6ZSBTVkcgZWxlbWVudHMuXG4gICAgICovXG4gICAgbmdBZnRlckNvbnRlbnRDaGVja2VkKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogUmVwbGFjZW1lbnQgb2YgYGNoYW5nZUljb25gIGZvciBtb3JlIG1vZGlmaWNhdGlvbnMuXG4gICAgICovXG4gICAgcHJpdmF0ZSBjaGFuZ2VJY29uMjtcbiAgICBwcml2YXRlIGhhbmRsZVNwaW47XG4gICAgcHJpdmF0ZSBoYW5kbGVSb3RhdGU7XG4gICAgcHJpdmF0ZSBzZXRDbGFzc05hbWU7XG4gICAgcHJpdmF0ZSBzZXRTVkdEYXRhO1xufVxuIl19