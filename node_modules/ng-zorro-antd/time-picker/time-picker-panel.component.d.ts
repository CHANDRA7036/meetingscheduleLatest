/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef, DebugElement, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { BooleanInput } from 'ng-zorro-antd/core/types';
import { DateHelperService } from 'ng-zorro-antd/i18n';
import { TimeHolder } from './time-holder';
import { NzTimeValueAccessorDirective } from './time-value-accessor.directive';
import * as ɵngcc0 from '@angular/core';
export declare type NzTimePickerUnit = 'hour' | 'minute' | 'second' | '12-hour';
export declare class NzTimePickerPanelComponent implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {
    private cdr;
    dateHelper: DateHelperService;
    static ngAcceptInputType_nzUse12Hours: BooleanInput;
    private _nzHourStep;
    private _nzMinuteStep;
    private _nzSecondStep;
    private unsubscribe$;
    private onChange?;
    private onTouch?;
    private _format;
    private _disabledHours?;
    private _disabledMinutes?;
    private _disabledSeconds?;
    private _allowEmpty;
    time: TimeHolder;
    hourEnabled: boolean;
    minuteEnabled: boolean;
    secondEnabled: boolean;
    firstScrolled: boolean;
    enabledColumns: number;
    hourRange: ReadonlyArray<{
        index: number;
        disabled: boolean;
    }>;
    minuteRange: ReadonlyArray<{
        index: number;
        disabled: boolean;
    }>;
    secondRange: ReadonlyArray<{
        index: number;
        disabled: boolean;
    }>;
    use12HoursRange: ReadonlyArray<{
        index: number;
        value: string;
    }>;
    nzTimeValueAccessorDirective?: NzTimeValueAccessorDirective;
    hourListElement?: DebugElement;
    minuteListElement?: DebugElement;
    secondListElement?: DebugElement;
    use12HoursListElement?: DebugElement;
    nzInDatePicker: boolean;
    nzAddOn?: TemplateRef<void>;
    nzHideDisabledOptions: boolean;
    nzClearText?: string;
    nzPlaceHolder?: string;
    nzUse12Hours: boolean;
    nzDefaultOpenValue?: Date;
    readonly closePanel: EventEmitter<void>;
    set nzAllowEmpty(value: boolean);
    get nzAllowEmpty(): boolean;
    set nzDisabledHours(value: undefined | (() => number[]));
    get nzDisabledHours(): undefined | (() => number[]);
    set nzDisabledMinutes(value: undefined | ((hour: number) => number[]));
    get nzDisabledMinutes(): undefined | ((hour: number) => number[]);
    set nzDisabledSeconds(value: (undefined | ((hour: number, minute: number) => number[])));
    get nzDisabledSeconds(): undefined | ((hour: number, minute: number) => number[]);
    set format(value: string);
    get format(): string;
    set nzHourStep(value: number);
    get nzHourStep(): number;
    set nzMinuteStep(value: number);
    get nzMinuteStep(): number;
    set nzSecondStep(value: number);
    get nzSecondStep(): number;
    selectInputRange(): void;
    buildHours(): void;
    buildMinutes(): void;
    buildSeconds(): void;
    build12Hours(): void;
    buildTimes(): void;
    scrollToTime(delay?: number): void;
    selectHour(hour: {
        index: number;
        disabled: boolean;
    }): void;
    selectMinute(minute: {
        index: number;
        disabled: boolean;
    }): void;
    selectSecond(second: {
        index: number;
        disabled: boolean;
    }): void;
    select12Hours(value: {
        index: number;
        value: string;
    }): void;
    scrollToSelected(instance: HTMLElement, index: number, duration: number | undefined, unit: NzTimePickerUnit): void;
    translateIndex(index: number, unit: NzTimePickerUnit): number;
    scrollTo(element: HTMLElement, to: number, duration: number): void;
    calcIndex(array: number[] | undefined, index: number): number;
    protected changed(): void;
    protected touched(): void;
    timeDisabled(value: Date): boolean;
    onClickNow(): void;
    isSelectedHour(hour: {
        index: number;
        disabled: boolean;
    }): boolean;
    isSelectedMinute(minute: {
        index: number;
        disabled: boolean;
    }): boolean;
    isSelectedSecond(second: {
        index: number;
        disabled: boolean;
    }): boolean;
    isSelected12Hours(value: {
        index: number;
        value: string;
    }): boolean;
    constructor(cdr: ChangeDetectorRef, dateHelper: DateHelperService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    writeValue(value: Date): void;
    registerOnChange(fn: (value: Date) => void): void;
    registerOnTouched(fn: () => void): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTimePickerPanelComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzTimePickerPanelComponent, "nz-time-picker-panel", ["nzTimePickerPanel"], {
    "nzInDatePicker": "nzInDatePicker";
    "nzHideDisabledOptions": "nzHideDisabledOptions";
    "nzUse12Hours": "nzUse12Hours";
    "nzAllowEmpty": "nzAllowEmpty";
    "nzDisabledHours": "nzDisabledHours";
    "nzDisabledMinutes": "nzDisabledMinutes";
    "nzDisabledSeconds": "nzDisabledSeconds";
    "format": "format";
    "nzHourStep": "nzHourStep";
    "nzMinuteStep": "nzMinuteStep";
    "nzSecondStep": "nzSecondStep";
    "nzAddOn": "nzAddOn";
    "nzClearText": "nzClearText";
    "nzPlaceHolder": "nzPlaceHolder";
    "nzDefaultOpenValue": "nzDefaultOpenValue";
}, {
    "closePanel": "closePanel";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS1waWNrZXItcGFuZWwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRpbWUtcGlja2VyLXBhbmVsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7OztBQWFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5SEEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWxpYmFiYS5jb20gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBEZWJ1Z0VsZW1lbnQsIEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCwgU2ltcGxlQ2hhbmdlcywgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQm9vbGVhbklucHV0IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcbmltcG9ydCB7IERhdGVIZWxwZXJTZXJ2aWNlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9pMThuJztcbmltcG9ydCB7IFRpbWVIb2xkZXIgfSBmcm9tICcuL3RpbWUtaG9sZGVyJztcbmltcG9ydCB7IE56VGltZVZhbHVlQWNjZXNzb3JEaXJlY3RpdmUgfSBmcm9tICcuL3RpbWUtdmFsdWUtYWNjZXNzb3IuZGlyZWN0aXZlJztcbmV4cG9ydCBkZWNsYXJlIHR5cGUgTnpUaW1lUGlja2VyVW5pdCA9ICdob3VyJyB8ICdtaW51dGUnIHwgJ3NlY29uZCcgfCAnMTItaG91cic7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOelRpbWVQaWNrZXJQYW5lbENvbXBvbmVudCBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBPbkluaXQsIE9uRGVzdHJveSwgT25DaGFuZ2VzIHtcbiAgICBwcml2YXRlIGNkcjtcbiAgICBkYXRlSGVscGVyOiBEYXRlSGVscGVyU2VydmljZTtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpVc2UxMkhvdXJzOiBCb29sZWFuSW5wdXQ7XG4gICAgcHJpdmF0ZSBfbnpIb3VyU3RlcDtcbiAgICBwcml2YXRlIF9uek1pbnV0ZVN0ZXA7XG4gICAgcHJpdmF0ZSBfbnpTZWNvbmRTdGVwO1xuICAgIHByaXZhdGUgdW5zdWJzY3JpYmUkO1xuICAgIHByaXZhdGUgb25DaGFuZ2U/O1xuICAgIHByaXZhdGUgb25Ub3VjaD87XG4gICAgcHJpdmF0ZSBfZm9ybWF0O1xuICAgIHByaXZhdGUgX2Rpc2FibGVkSG91cnM/O1xuICAgIHByaXZhdGUgX2Rpc2FibGVkTWludXRlcz87XG4gICAgcHJpdmF0ZSBfZGlzYWJsZWRTZWNvbmRzPztcbiAgICBwcml2YXRlIF9hbGxvd0VtcHR5O1xuICAgIHRpbWU6IFRpbWVIb2xkZXI7XG4gICAgaG91ckVuYWJsZWQ6IGJvb2xlYW47XG4gICAgbWludXRlRW5hYmxlZDogYm9vbGVhbjtcbiAgICBzZWNvbmRFbmFibGVkOiBib29sZWFuO1xuICAgIGZpcnN0U2Nyb2xsZWQ6IGJvb2xlYW47XG4gICAgZW5hYmxlZENvbHVtbnM6IG51bWJlcjtcbiAgICBob3VyUmFuZ2U6IFJlYWRvbmx5QXJyYXk8e1xuICAgICAgICBpbmRleDogbnVtYmVyO1xuICAgICAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICB9PjtcbiAgICBtaW51dGVSYW5nZTogUmVhZG9ubHlBcnJheTx7XG4gICAgICAgIGluZGV4OiBudW1iZXI7XG4gICAgICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIH0+O1xuICAgIHNlY29uZFJhbmdlOiBSZWFkb25seUFycmF5PHtcbiAgICAgICAgaW5kZXg6IG51bWJlcjtcbiAgICAgICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgfT47XG4gICAgdXNlMTJIb3Vyc1JhbmdlOiBSZWFkb25seUFycmF5PHtcbiAgICAgICAgaW5kZXg6IG51bWJlcjtcbiAgICAgICAgdmFsdWU6IHN0cmluZztcbiAgICB9PjtcbiAgICBuelRpbWVWYWx1ZUFjY2Vzc29yRGlyZWN0aXZlPzogTnpUaW1lVmFsdWVBY2Nlc3NvckRpcmVjdGl2ZTtcbiAgICBob3VyTGlzdEVsZW1lbnQ/OiBEZWJ1Z0VsZW1lbnQ7XG4gICAgbWludXRlTGlzdEVsZW1lbnQ/OiBEZWJ1Z0VsZW1lbnQ7XG4gICAgc2Vjb25kTGlzdEVsZW1lbnQ/OiBEZWJ1Z0VsZW1lbnQ7XG4gICAgdXNlMTJIb3Vyc0xpc3RFbGVtZW50PzogRGVidWdFbGVtZW50O1xuICAgIG56SW5EYXRlUGlja2VyOiBib29sZWFuO1xuICAgIG56QWRkT24/OiBUZW1wbGF0ZVJlZjx2b2lkPjtcbiAgICBuekhpZGVEaXNhYmxlZE9wdGlvbnM6IGJvb2xlYW47XG4gICAgbnpDbGVhclRleHQ/OiBzdHJpbmc7XG4gICAgbnpQbGFjZUhvbGRlcj86IHN0cmluZztcbiAgICBuelVzZTEySG91cnM6IGJvb2xlYW47XG4gICAgbnpEZWZhdWx0T3BlblZhbHVlPzogRGF0ZTtcbiAgICByZWFkb25seSBjbG9zZVBhbmVsOiBFdmVudEVtaXR0ZXI8dm9pZD47XG4gICAgc2V0IG56QWxsb3dFbXB0eSh2YWx1ZTogYm9vbGVhbik7XG4gICAgZ2V0IG56QWxsb3dFbXB0eSgpOiBib29sZWFuO1xuICAgIHNldCBuekRpc2FibGVkSG91cnModmFsdWU6IHVuZGVmaW5lZCB8ICgoKSA9PiBudW1iZXJbXSkpO1xuICAgIGdldCBuekRpc2FibGVkSG91cnMoKTogdW5kZWZpbmVkIHwgKCgpID0+IG51bWJlcltdKTtcbiAgICBzZXQgbnpEaXNhYmxlZE1pbnV0ZXModmFsdWU6IHVuZGVmaW5lZCB8ICgoaG91cjogbnVtYmVyKSA9PiBudW1iZXJbXSkpO1xuICAgIGdldCBuekRpc2FibGVkTWludXRlcygpOiB1bmRlZmluZWQgfCAoKGhvdXI6IG51bWJlcikgPT4gbnVtYmVyW10pO1xuICAgIHNldCBuekRpc2FibGVkU2Vjb25kcyh2YWx1ZTogKHVuZGVmaW5lZCB8ICgoaG91cjogbnVtYmVyLCBtaW51dGU6IG51bWJlcikgPT4gbnVtYmVyW10pKSk7XG4gICAgZ2V0IG56RGlzYWJsZWRTZWNvbmRzKCk6IHVuZGVmaW5lZCB8ICgoaG91cjogbnVtYmVyLCBtaW51dGU6IG51bWJlcikgPT4gbnVtYmVyW10pO1xuICAgIHNldCBmb3JtYXQodmFsdWU6IHN0cmluZyk7XG4gICAgZ2V0IGZvcm1hdCgpOiBzdHJpbmc7XG4gICAgc2V0IG56SG91clN0ZXAodmFsdWU6IG51bWJlcik7XG4gICAgZ2V0IG56SG91clN0ZXAoKTogbnVtYmVyO1xuICAgIHNldCBuek1pbnV0ZVN0ZXAodmFsdWU6IG51bWJlcik7XG4gICAgZ2V0IG56TWludXRlU3RlcCgpOiBudW1iZXI7XG4gICAgc2V0IG56U2Vjb25kU3RlcCh2YWx1ZTogbnVtYmVyKTtcbiAgICBnZXQgbnpTZWNvbmRTdGVwKCk6IG51bWJlcjtcbiAgICBzZWxlY3RJbnB1dFJhbmdlKCk6IHZvaWQ7XG4gICAgYnVpbGRIb3VycygpOiB2b2lkO1xuICAgIGJ1aWxkTWludXRlcygpOiB2b2lkO1xuICAgIGJ1aWxkU2Vjb25kcygpOiB2b2lkO1xuICAgIGJ1aWxkMTJIb3VycygpOiB2b2lkO1xuICAgIGJ1aWxkVGltZXMoKTogdm9pZDtcbiAgICBzY3JvbGxUb1RpbWUoZGVsYXk/OiBudW1iZXIpOiB2b2lkO1xuICAgIHNlbGVjdEhvdXIoaG91cjoge1xuICAgICAgICBpbmRleDogbnVtYmVyO1xuICAgICAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICB9KTogdm9pZDtcbiAgICBzZWxlY3RNaW51dGUobWludXRlOiB7XG4gICAgICAgIGluZGV4OiBudW1iZXI7XG4gICAgICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIH0pOiB2b2lkO1xuICAgIHNlbGVjdFNlY29uZChzZWNvbmQ6IHtcbiAgICAgICAgaW5kZXg6IG51bWJlcjtcbiAgICAgICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgfSk6IHZvaWQ7XG4gICAgc2VsZWN0MTJIb3Vycyh2YWx1ZToge1xuICAgICAgICBpbmRleDogbnVtYmVyO1xuICAgICAgICB2YWx1ZTogc3RyaW5nO1xuICAgIH0pOiB2b2lkO1xuICAgIHNjcm9sbFRvU2VsZWN0ZWQoaW5zdGFuY2U6IEhUTUxFbGVtZW50LCBpbmRleDogbnVtYmVyLCBkdXJhdGlvbjogbnVtYmVyIHwgdW5kZWZpbmVkLCB1bml0OiBOelRpbWVQaWNrZXJVbml0KTogdm9pZDtcbiAgICB0cmFuc2xhdGVJbmRleChpbmRleDogbnVtYmVyLCB1bml0OiBOelRpbWVQaWNrZXJVbml0KTogbnVtYmVyO1xuICAgIHNjcm9sbFRvKGVsZW1lbnQ6IEhUTUxFbGVtZW50LCB0bzogbnVtYmVyLCBkdXJhdGlvbjogbnVtYmVyKTogdm9pZDtcbiAgICBjYWxjSW5kZXgoYXJyYXk6IG51bWJlcltdIHwgdW5kZWZpbmVkLCBpbmRleDogbnVtYmVyKTogbnVtYmVyO1xuICAgIHByb3RlY3RlZCBjaGFuZ2VkKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHRvdWNoZWQoKTogdm9pZDtcbiAgICB0aW1lRGlzYWJsZWQodmFsdWU6IERhdGUpOiBib29sZWFuO1xuICAgIG9uQ2xpY2tOb3coKTogdm9pZDtcbiAgICBpc1NlbGVjdGVkSG91cihob3VyOiB7XG4gICAgICAgIGluZGV4OiBudW1iZXI7XG4gICAgICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIH0pOiBib29sZWFuO1xuICAgIGlzU2VsZWN0ZWRNaW51dGUobWludXRlOiB7XG4gICAgICAgIGluZGV4OiBudW1iZXI7XG4gICAgICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIH0pOiBib29sZWFuO1xuICAgIGlzU2VsZWN0ZWRTZWNvbmQoc2Vjb25kOiB7XG4gICAgICAgIGluZGV4OiBudW1iZXI7XG4gICAgICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIH0pOiBib29sZWFuO1xuICAgIGlzU2VsZWN0ZWQxMkhvdXJzKHZhbHVlOiB7XG4gICAgICAgIGluZGV4OiBudW1iZXI7XG4gICAgICAgIHZhbHVlOiBzdHJpbmc7XG4gICAgfSk6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgZGF0ZUhlbHBlcjogRGF0ZUhlbHBlclNlcnZpY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBEYXRlKTogdm9pZDtcbiAgICByZWdpc3Rlck9uQ2hhbmdlKGZuOiAodmFsdWU6IERhdGUpID0+IHZvaWQpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiAoKSA9PiB2b2lkKTogdm9pZDtcbn1cbiJdfQ==