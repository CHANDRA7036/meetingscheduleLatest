/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';
import { NzTimelineMode } from './timeline.component';
import { TimelineService } from './timeline.service';
import * as ɵngcc0 from '@angular/core';
declare const TimelineTimeDefaultColors: readonly ["red", "blue", "green", "grey", "gray"];
export declare type NzTimelineItemColor = typeof TimelineTimeDefaultColors[number];
export declare class NzTimelineItemComponent implements OnChanges {
    private cdr;
    private timelineService;
    template: TemplateRef<void>;
    nzColor: NzTimelineItemColor;
    nzDot?: string | TemplateRef<void>;
    isLast: boolean;
    borderColor: string | null;
    position: NzTimelineMode | undefined;
    constructor(cdr: ChangeDetectorRef, timelineService: TimelineService);
    ngOnChanges(changes: SimpleChanges): void;
    detectChanges(): void;
    private updateCustomColor;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTimelineItemComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzTimelineItemComponent, "nz-timeline-item, [nz-timeline-item]", ["nzTimelineItem"], {
    "nzColor": "nzColor";
    "nzDot": "nzDot";
}, {}, never>;
}
export {};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZWxpbmUtaXRlbS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidGltZWxpbmUtaXRlbS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7QUFVQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBbGliYWJhLmNvbSBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcywgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE56VGltZWxpbmVNb2RlIH0gZnJvbSAnLi90aW1lbGluZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGltZWxpbmVTZXJ2aWNlIH0gZnJvbSAnLi90aW1lbGluZS5zZXJ2aWNlJztcbmRlY2xhcmUgY29uc3QgVGltZWxpbmVUaW1lRGVmYXVsdENvbG9yczogcmVhZG9ubHkgW1wicmVkXCIsIFwiYmx1ZVwiLCBcImdyZWVuXCIsIFwiZ3JleVwiLCBcImdyYXlcIl07XG5leHBvcnQgZGVjbGFyZSB0eXBlIE56VGltZWxpbmVJdGVtQ29sb3IgPSB0eXBlb2YgVGltZWxpbmVUaW1lRGVmYXVsdENvbG9yc1tudW1iZXJdO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpUaW1lbGluZUl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgY2RyO1xuICAgIHByaXZhdGUgdGltZWxpbmVTZXJ2aWNlO1xuICAgIHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjx2b2lkPjtcbiAgICBuekNvbG9yOiBOelRpbWVsaW5lSXRlbUNvbG9yO1xuICAgIG56RG90Pzogc3RyaW5nIHwgVGVtcGxhdGVSZWY8dm9pZD47XG4gICAgaXNMYXN0OiBib29sZWFuO1xuICAgIGJvcmRlckNvbG9yOiBzdHJpbmcgfCBudWxsO1xuICAgIHBvc2l0aW9uOiBOelRpbWVsaW5lTW9kZSB8IHVuZGVmaW5lZDtcbiAgICBjb25zdHJ1Y3RvcihjZHI6IENoYW5nZURldGVjdG9yUmVmLCB0aW1lbGluZVNlcnZpY2U6IFRpbWVsaW5lU2VydmljZSk7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgZGV0ZWN0Q2hhbmdlcygpOiB2b2lkO1xuICAgIHByaXZhdGUgdXBkYXRlQ3VzdG9tQ29sb3I7XG59XG5leHBvcnQge307XG4iXX0=